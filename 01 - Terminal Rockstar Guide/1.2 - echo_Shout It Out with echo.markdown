# The echo Command 🗣️

## What It Does

The `echo` command prints whatever you tell it to the terminal. It’s like a megaphone—you give it words, and it shouts them out. You can also redirect its output to files or use it to display variables.

- Example: `echo Hello` prints `Hello`.
- It’s flexible and works with text, variables, or even command outputs.

## Why It Matters

`echo` is your go-to for displaying messages, creating files with text, or debugging scripts. It’s simple but powerful for communicating in the terminal.

## Big Example

You’re planning a festival and using `echo` to manage announcements and files.

1. **Print a message**:

   ```bash
   echo "Welcome to Music Fest 2025!"
   ```

   Output:

   ```
   Welcome to Music Fest 2025!
   ```

2. **Save to a file**:

   ```bash
   echo "Main Stage: The Killers" > /home/user/festival/stages.txt
   cat /home/user/festival/stages.txt
   ```

   Output:

   ```
   Main Stage: The Killers
   ```

3. **Multiple lines**:

   ```bash
   echo -e "Band 1: The Killers\nBand 2: Tame Impala" > /home/user/festival/lineup.txt
   cat /home/user/festival/lineup.txt
   ```

   Output:

   ```
   Band 1: The Killers
   Band 2: Tame Impala
   ```

   `-e` enables `\n` for new lines.

4. **Show a variable**:

   ```bash
   MY_BAND="Arctic Monkeys"
   echo "Headliner: $MY_BAND"
   ```

   Output:

   ```
   Headliner: Arctic Monkeys
   ```

5. **Combine with** `whoami`:

   ```bash
   echo "Planner: $(whoami)"
   ```

   Output:

   ```
   Planner: user
   ```

6. **In a script**:

   ```bash
   echo "echo Festival starts at: \$(date)" > /home/user/festival/time.sh
   chmod +x /home/user/festival/time.sh
   ./time.sh
   ```

   Output:

   ```
   Festival starts at: Wed Apr 16 10:00:00 UTC 2025
   ```

## When to Use

- Printing messages to the terminal.
- Creating or appending to files.
- Displaying variables or command results in scripts.

## Exercise

**Task**: Use `echo` for festival planning.

1. Print an announcement:

   ```bash
   echo "Festival tickets on sale now!"
   ```

2. Save a schedule to a file:

   ```bash
   echo "8 PM: Main Act" > /home/user/festival/schedule.txt
   ```

3. Add multiple lines:

   ```bash
   echo -e "Day 1: Rock\nDay 2: Pop" > /home/user/festival/days.txt
   cat /home/user/festival/days.txt
   ```

4. Print your username with `echo` and `whoami`:

   ```bash
   echo "I am: $(whoami)"
   ```

5. Make a script to announce the festival:

   ```bash
   echo "echo Music Fest by \$(whoami)" > /home/user/festival/announce.sh
   chmod +x /home/user/festival/announce.sh
   ./announce.sh
   ```

#echo

---
